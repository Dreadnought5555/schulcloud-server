'use strict';

const globalHooks = require('../../../hooks');
const hooks = require('feathers-hooks');
const auth = require('feathers-authentication');
const courseModel = require('../../user-group/model').courseModel;

/** saves the event-ids generated by the Schul-Cloud Calendar-Service to given course in order to handle the events later on
 * todo: maybe refactor later if there are also class and school events
 * @param hook {Object} - contains the created event
 * **/
const persistCourseTimesEvent = (hook) => {
	let courseService = hook.app.service("courses");

	return Promise.all(hook.result.map(event => {
		if (event["x-sc-courseId"]) {
			let courseId = event["x-sc-courseId"];
			let courseTimeId = event["x-sc-courseTimeId"];

			// find course-time and update eventId
			return courseService.get(courseId).then(course => {
				return courseModel.findOneAndUpdate(
					{"_id": courseId, "times._id": courseTimeId},
					{
						"$set": {
							"times.$.eventId": event._id
						}
					}
				);
			});
		}
	})).then(_ => {
		return Promise.resolve(hook);
	});
};

exports.before = {
	all: [
		auth.hooks.authenticate('jwt')
	],
	find: [globalHooks.hasPermission('CALENDAR_VIEW')],
	get: [globalHooks.hasPermission('CALENDAR_VIEW')],
	create: [globalHooks.hasPermission('CALENDAR_CREATE')],
	update: [globalHooks.hasPermission('CALENDAR_EDIT')],
	patch: [globalHooks.hasPermission('CALENDAR_EDIT')],
	remove: [globalHooks.hasPermission('CALENDAR_CREATE')]
};

exports.after = {
	all: [],
	find: [],
	get: [],
	create: [persistCourseTimesEvent],
	update: [],
	patch: [],
	remove: []
};

exports.afterSubscriptions = {
	all: [],
	find: [],
	get: [],
	create: [],
	update: [],
	patch: [],
	remove: []
}

/* example: hook.result from calendar /event
[ { type: 'event',
    id: '54be9721-9873-438d-9b50-593e0d7635cb',
    attributes:
     { summary: 'test',
       location: 'test',
       description: 'test',
       dtstart: '2018-07-11T00:00:00.000Z',
       dtend: '2018-07-11T01:00:00.000Z',
       dtstamp: '2018-07-17T10:33:24.796Z',
       uid: '410b6adc-fd6a-4706-bf76-c2a5c8d7f8b7' },
    relationships: { 'scope-ids': [Array] },
    title: 'test',
    allDay: false,
    start: 1531267200000,
    end: 1531270800000,
    url: '',
    _id: '410b6adc-fd6a-4706-bf76-c2a5c8d7f8b7',
    summary: 'test',
    location: 'test',
    description: 'test',
    'x-sc-courseId': undefined,
    'x-sc-courseTimeId': undefined } ]
	
*/

/* 
{ links: { self: 'https://schul-cloud.org:3000/subscriptions' },
  data:
   [ { type: 'subscription',
       id: '62a11270-5eef-411d-bbbf-dcf7e059d8c5',
       attributes: [Object],
       relationships: [Object] } ] }
*/
